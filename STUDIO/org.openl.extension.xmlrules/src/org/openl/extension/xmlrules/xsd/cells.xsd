<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="cells" type="cells"/>

  <xs:complexType name="cells">
    <xs:sequence>
      <xs:element name="cell" type="cell" maxOccurs="unbounded"/>
      <xs:element name="named-ranges" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="named-range" type="named-range" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cell">
    <xs:sequence>
      <xs:element name="address" type="range-node"/>
      <xs:element name="node" type="node" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="range-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="colCount" type="xs:int" default="1" minOccurs="0"/>
          <xs:element name="column" type="xs:string" minOccurs="0"/>
          <xs:element name="hasArrayFormula" type="xs:boolean" default="false" minOccurs="0"/>
          <xs:element name="path" type="xs:string" minOccurs="0"/>
          <xs:element name="row" type="xs:string" minOccurs="0"/>
          <xs:element name="rowCount" type="xs:int" default="1" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="node" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="string-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="number-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="boolean-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="named-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="expression-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="leftNode" type="node" minOccurs="0"/>
          <xs:element name="operator" type="xs:string"/>
          <xs:element name="rightNode" type="node" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="function-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="arguments" type="node" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="name" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="if-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="condition" type="node" minOccurs="0"/>
          <xs:element name="elseNode" type="node" minOccurs="0"/>
          <xs:element name="thenNode" type="node" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="if-error-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="node" minOccurs="0"/>
          <xs:element name="valueIfError" type="node" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="filter-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="comparison" type="comparison" minOccurs="0"/>
          <xs:element name="condition" type="node" minOccurs="0"/>
          <xs:element name="field-name" type="xs:string"/>
          <xs:element name="node" type="node" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="array-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="failure-node">
    <xs:complexContent>
      <xs:extension base="node">
        <xs:sequence>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="named-range">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="range" type="range-node" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="comparison">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="&lt;"/>
      <xs:enumeration value="&lt;="/>
      <xs:enumeration value="=="/>
      <xs:enumeration value="&gt;"/>
      <xs:enumeration value="&gt;="/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

